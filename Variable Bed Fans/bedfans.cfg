############### Config options ##################

[gcode_macro bedfanvars]
variable_threshold: 100        # If bed temp target is above this threshold, fans will be enabled. If temp is set to below this threshold, fans will be disabled.
variable_fast: 0.4        # Fan speed once bed temp is reached  
variable_slow: 0.1        # Fan speed while bed is heating
variable_power: 0.55    # Target power usage
variable_coeff: 0.75     # Coefficient to adjust fan speed
gcode:

########## Bed Fans #########

[fan_generic BedFans_L]
pin: PA2
#cycle_time: 0.05
kick_start_time: 0.5

[fan_generic BedFans_ML]
pin: PA15
#cycle_time: 0.05
kick_start_time: 0.5

[fan_generic BedFans_MR]
pin: PB10
#cycle_time: 0.05
kick_start_time: 0.5

[fan_generic BedFans_R]
pin: PD14
#cycle_time: 0.05
kick_start_time: 0.5

########## Aliases #########

[gcode_macro BedFansSlow]
description: Set bed fans to slow speed
gcode:
    # Vars
    {% set SLOW = printer["gcode_macro bedfanvars"].slow|float %}
    
    SET_FAN_SPEED FAN=BedFans_L SPEED={SLOW}
    SET_FAN_SPEED FAN=BedFans_ML SPEED={SLOW}
    SET_FAN_SPEED FAN=BedFans_MR SPEED={SLOW}
    SET_FAN_SPEED FAN=BedFans_R SPEED={SLOW}

[gcode_macro BedFansFast]
description: Set bed fans to high speed
gcode:
    # Vars
    {% set FAST = printer["gcode_macro bedfanvars"].fast|float %}
    
    SET_FAN_SPEED FAN=BedFans_L SPEED={FAST}
    SET_FAN_SPEED FAN=BedFans_ML SPEED={FAST}
    SET_FAN_SPEED FAN=BedFans_MR SPEED={FAST}
    SET_FAN_SPEED FAN=BedFans_R SPEED={FAST}

[gcode_macro BedFansOff]
description: Turn off bed fans
gcode:
    SET_FAN_SPEED FAN=BedFans_L SPEED=0
    SET_FAN_SPEED FAN=BedFans_ML SPEED=0
    SET_FAN_SPEED FAN=BedFans_MR SPEED=0
    SET_FAN_SPEED FAN=BedFans_R SPEED=0

############ Command overrides ############

# Override, set fan speeds to low and start monitoring loop.
[gcode_macro SET_HEATER_TEMPERATURE]
description: Sets heater temperature and activates bed fans (replaces M104)
rename_existing: _SET_HEATER_TEMPERATURE
gcode:
    # Parameters
    {% set HEATER = params.HEATER|default("None") %}
    {% set TARGET = params.TARGET|default(0)|int %}
    # Vars
    {% set THRESHOLD = printer["gcode_macro bedfanvars"].threshold|int %}
    
    {% if HEATER|lower == "extruder" %}
        M104 S{TARGET}
    {% elif HEATER|lower == "heater_bed" %}
        M99140 S{TARGET}
    {% else %}
        {action_respond_info("Heater %s not supported" % HEATER)}
    {% endif %}

    # Set fans to low if heater_bed temp is requested above threshold temp, and kick off monitoring loop.
    {% if HEATER|lower == "heater_bed" %}
        {% if TARGET >= THRESHOLD %}
            BedFansSlow
            UPDATE_DELAYED_GCODE ID=bedfanloop DURATION=1
        {% else %}
            BedFansOff
            UPDATE_DELAYED_GCODE ID=bedfanloop DURATION=0 #    Cancel bed fan loop if it's running
        {% endif %}
    {% endif %}
    
# Override M190 (Wait for Bed Temperature)
# As a bonus, use TEMPERATURE_WAIT so we don't have to wait for PID to level off.
[gcode_macro M190]
description: Sets bed temperature (replaces M190)
rename_existing: M99190
gcode:
    # Parameters
    {% set S = params.S|int %}
    # Vars
    {% set THRESHOLD = printer["gcode_macro bedfanvars"].threshold|int %}
    
    {% if S >= THRESHOLD %}
        BedFansSlow                                                                # >= Threshold temp: Low speed fans while heating 
    {% else %}
        BedFansOff                                                                # < Threshold temp: Turn bed fans off
    {% endif %}                                        

    M140 {% for p in params
      %}{'%s%s' % (p, params[p])}{%
      endfor %}                                                                    # Set bed temp
      
    {% if S != 0 %}
        TEMPERATURE_WAIT SENSOR=heater_bed MINIMUM={S|int} MAXIMUM={S|int + 5}    # Wait for bed temp within 5 degrees
    {% endif %}

    # Post-heating fan speeds
    {% if S >= THRESHOLD %}                                    
        UPDATE_DELAYED_GCODE ID=bedfanloop DURATION=1                          # When target temp ios above threshold temp, monitor and adjust fans
    {% endif %}
    
# Replace M140 (Set Bed Temperature) to just be an alias of SET_HEATER_TEMPERATURE (which has associated bed fan logic if enabled)
[gcode_macro M140]
description: Sets bed temperature (replaces M140)
rename_existing: M99140
gcode:
    # Parameters
    {% set S = params.S|float %}
    
    SET_HEATER_TEMPERATURE HEATER=heater_bed TARGET={S}
    
# Replace TURN_OFF_HEATERS
[gcode_macro TURN_OFF_HEATERS]
description: Turns off heaters and bedfans
rename_existing: _TURN_OFF_HEATERS
gcode:
    BedFansOff
    _TURN_OFF_HEATERS
    
################ Monitoring loop #####################
# Turns bed fans to "fast" speed once target bed temp is reached.

[delayed_gcode bedfanloop]
gcode:
    # Vars
    {% set THRESHOLD = printer["gcode_macro bedfanvars"].threshold|int %}
    {% set FAST = printer["gcode_macro bedfanvars"].fast|float %}
    {% set POWER = printer["gcode_macro bedfanvars"].power|float %}
    {% set COEFF = printer["gcode_macro bedfanvars"].coeff|float %}
    
    {% if printer.heater_bed.target >= THRESHOLD %}                                  # Continue only if target temp greater than threshold.
        {% if printer.heater_bed.temperature|int >= (printer.heater_bed.target|int - 1) %}
            {% set DELTA = POWER - printer.heater_bed.power|float %}
            SET_FAN_SPEED FAN=BedFans_L SPEED={FAST + COEFF * DELTA}                 # bump speed up or down % of delta
            SET_FAN_SPEED FAN=BedFans_ML SPEED={FAST + COEFF * DELTA}                # Set the coefficent to suit the printer.
            SET_FAN_SPEED FAN=BedFans_MR SPEED={FAST + COEFF * DELTA}
            SET_FAN_SPEED FAN=BedFans_R SPEED={FAST + COEFF * DELTA}
            # {action_respond_info("Delta = %s " % DELTA)}                           # debug info
        {% else%}
            BedFansSlow                                                              # don't adjust until temp is reached.
        {% endif %}
        UPDATE_DELAYED_GCODE ID=bedfanloop DURATION=10                               # keep going every X seconds. I have found 10 is pretty good when the bed is hot.
    {% endif %}